#!/bin/bash

set -e
set -o pipefail

compile="$0"
JOBS="$(getconf _NPROCESSORS_ONLN)"
V="${V:+V=1}"

clean()
{
	make clean

	local CLEAN=$(git clean -n -fdx)
	if [ -n "$CLEAN" ]
	then
		echo "$0: Unclean:" >&2
		echo "$CLEAN" >&2
		exit 1
	fi
}

arch()
{
	[ -z "$1" ] && exit

	echo "$compile $@ JOBS=$JOBS" $V
	clean

	case "$1" in
	cross)
		arch atari-st web "$(uname -m)"
		;;
	atari-st)
		m68k-elf-gcc --version | sed -n 1p
		make -j"$JOBS" $V S=1 TARGET_COMPILE=m68k-elf- PSGPLAY.TOS lib/tos/tos
		;;
	web)
		emcc --version | sed -n 1p
		make -j"$JOBS" $V HOST_CC=emcc web
		;;
	ppc64le |\
	aarch64)
		cc --version | sed -n 1p
		if [[ "$(uname -s)" == "Darwin" ]]; then
			make -j"$JOBS" $V PORTAUDIO=1 all test
		else
			make -j"$JOBS" $V ALSA=1 all test
		fi
		;;
	x86_64)
		gcc --version | sed -n 1p
		make -j"$JOBS" $V S=1 ALSA=1 CC=gcc all test
		clean

		clang --version | sed -n 1p
		make -j"$JOBS" $V S=1 ALSA=1 CC=clang psgplay
		clean

		cc --version | sed -n 1p
		make -j"$JOBS" $V psgplay
		clean

		cc --version | sed -n 1p
		make -j"$JOBS" $V ALSA=1 psgplay
		;;
	*)
		echo "$0: '$1' is not an arch." >&2
		exit 1
	esac

	shift
	arch "$@"
}

case "$1" in
arch)
	shift
	arch "$@"
	;;
*)
	echo "$0: '$1' is not a command." >&2
	exit 1
esac
