#!/bin/bash

set -e
set -o pipefail

compile="$0"
JOBS="$(getconf _NPROCESSORS_ONLN)"
V="${V:+V=1}"

clean()
{
	make clean

	local CLEAN=$(git clean -n -fdx)
	if [ -n "$CLEAN" ]
	then
		echo "$0: Unclean:" >&2
		echo "$CLEAN" >&2
		exit 1
	fi
}

arch()
{
	[ -z "$1" ] && exit

	echo "$compile $@ JOBS=$JOBS" $V
	clean

	case "$1" in
	cross)
		arch atari-st web "$(uname -m)"
		;;
	atari-st)
		m68k-elf-gcc --version | sed -n 1p
		make -j"$JOBS" $V S=1 TARGET_COMPILE=m68k-elf- PSGPLAY.TOS lib/tos/tos
		;;
	mac)
		cc --version | sed -n 1p
		make -j"$JOBS" $V psgplay example
		;;
	web)
		emcc --version | sed -n 1p
		make -j"$JOBS" $V HOST_CC=emcc web
		;;
	ppc64le |\
	aarch64)
		cc --version | sed -n 1p
		make -j"$JOBS" $V ALSA=1 all test
		;;
	x86_64)
		gcc --version | sed -n 1p
		make -j"$JOBS" $V S=1 ALSA=1 CC=gcc all test
		clean

		clang --version | sed -n 1p
		make -j"$JOBS" $V S=1 ALSA=1 CC=clang psgplay
		clean

		cc --version | sed -n 1p
		make -j"$JOBS" $V psgplay
		clean

		cc --version | sed -n 1p
		make -j"$JOBS" $V ALSA=1 psgplay
		;;
	arm-homebrew-gcc-portaudio)
		HOMEBREW_GCC="$(find -L "$(brew --prefix)"/bin -name 'gcc-[0-9]*' 2>/dev/null | sort -Vr | head -n1)"
		if [ -z "$HOMEBREW_GCC" ]; then
			echo "Error: No Homebrew gcc-N found." >&2
			exit 1
		fi
		echo "Using Homebrew GCC: $HOMEBREW_GCC"
		"$HOMEBREW_GCC" --version | sed -n 1p
		make -j"$JOBS" $V PORTAUDIO=1 HOST_CC="$HOMEBREW_GCC" BUILD_CC="$HOMEBREW_GCC" HOST_LD="/usr/bin/clang"
		;;
	*)
		echo "$0: '$1' is not an arch." >&2
		exit 1
	esac

	shift
	arch "$@"
}

case "$1" in
arch)
	shift
	arch "$@"
	;;
*)
	echo "$0: '$1' is not a command." >&2
	exit 1
esac
